{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["navbar","props","className","mode","href","title","type","id","onClick","redishMode","greenishMode","bluishMode","toggleMode","TextForm","useState","text","setText","heading","value","rows","onChange","e","target","console","log","toUpperCase","navigator","clipboard","writeText","alert","split","length","Navbar","prototype","PropTypes","string","isRequired","aboutText","defaultProps","App","setmode","document","body","style","backgroundColor","color","querySelector","classList","remove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.248b2261.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nexport default function navbar(props) {\r\n\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"/navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/about\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li> */}\r\n            <li className=\"nav-item\">\r\n            <button className=\"chMode redish mx-2\" onClick={props.redishMode}></button>\r\n             \r\n            </li>\r\n            <li className=\"nav-item\">\r\n            \r\n            <button className=\" chMode greenish mx-2\" onClick={props.greenishMode}></button>\r\n             \r\n            </li>\r\n            <li className=\"nav-item\">\r\n            <button className=\"chMode bluish mx-2\" onClick={props.bluishMode}></button> \r\n            </li>\r\n          </ul>\r\n\r\n          <div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n     \r\n    </nav>\r\n\r\n  );\r\n}\r\n","import React,{useState} from 'react';\r\n// import \"../App.css\";\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n    function uppText(){\r\n   setText(text.toUpperCase())\r\n    }\r\n    function changeTxt(e)\r\n    {\r\n        setText(e.target.value);\r\n        console.log(e);\r\n    }\r\n    // Copy Text\r\n    function handleCopyClick(){\r\n        navigator.clipboard.writeText(text);\r\n        alert(\"Text Copied\");\r\n    }\r\n    //clear text\r\n    function handleClear(){\r\n        setText(\"\");\r\n    }\r\n    return (\r\n        <>\r\n   <div className=\"container my-3\">\r\n       <h1>{props.heading}</h1>\r\n       <textarea className=\"form-control\" value=\r\n       {text} rows=\"8\"  onChange={changeTxt}></textarea>\r\n       <button className=\"btn btn-primary my-2 mx-3\" onClick={uppText} >Convert To UpperCase </button>\r\n       <button className=\"btn btn-primary my-2 mx-3\" onClick={handleCopyClick} >Copy Text </button>\r\n       <button className=\"btn btn-primary my-2 mx-3\" onClick={handleClear} >Clear Text </button>\r\n</div> \r\n<div className=\"container\">\r\n    <h1>Text Summary</h1>\r\n    <h5>No. Of Words : {text.split(\" \").length-1} <br />  No. Of Letters : {text.length} <br />Time Require To Read This: {text.split(\" \").length*0.008-0.008} Min</h5>\r\n</div>\r\n</>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport PropTypes from \"prop-types\";\n\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n// import About from \"./components/about\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#121212\";\n      document.body.style.color = \"white\";\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n    }\n  };\n  const redishMode = () => {\n    document.body.style.backgroundColor = \"#f3555566\";\n    document\n      .querySelector(\".navbar\")\n      .classList.remove(`${mode === \"dark\" ? \"bg-dark\" : \"bg-light\"}`);\n    document.querySelector(\".navbar\").style.backgroundColor = \"#ff9696\";\n    document.body.style.color = \"black\";\n  };\n  const greenishMode = () => {\n    document.body.style.backgroundColor = \"#3cff6b4d\";\n    document.body.style.color = \"black\";\n  };\n  const bluishMode = () => {\n    document.body.style.backgroundColor = \"#6877ffb3\";\n    document.body.style.color = \"black\";\n  };\n  return (\n    \n    // <Router>\n    <>\n    <Navbar\n    title=\"Text Tools\"\n    mode={mode}\n    toggleMode={toggleMode}\n    redishMode={redishMode}\n    bluishMode={bluishMode}\n    greenishMode={greenishMode}\n    />\n     <TextForm heading=\"Enter The Text Which You Want To Modify\" />\n    </>\n      \n       /* <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route><Route path=\"/\">\n              <TextForm heading=\"Enter The Text Which You Want To Modify\" />\n          </Route>\n        </Switch>\n      \n    </Router> */\n    \n  );\n}\nNavbar.prototype = {\n  title: PropTypes.string.isRequired,\n  aboutText: PropTypes.string.isRequired,\n};\nNavbar.defaultProps = {\n  title: \"Text Tools\",\n  aboutText: \"About\",\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// import { HashRouter} from 'react-router-dom';\n// ReactDOM.render(\n\n//       <HashRouter>\n//      <React.StrictMode>\n//        <App />\n//      </React.StrictMode>\n//       </HashRouter>,\n//   document.getElementById('root')\n// );\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}